{"version":3,"sources":["/./$_lazy_route_resource lazy namespace object","/./src/app/app.component.html","/./src/app/comments/comments.component.html","/./src/app/upload-video/upload-video.component.html","/./src/app/video-list/video-list.component.html","/./src/app/app-routing.module.ts","/./src/app/app.component.css","/./src/app/app.component.ts","/./src/app/app.module.ts","/./src/app/comments.service.ts","/./src/app/comments/comment.ts","/./src/app/comments/comments.component.css","/./src/app/comments/comments.component.ts","/./src/app/upload-video/upload-video.component.css","/./src/app/upload-video/upload-video.component.ts","/./src/app/video-list/video-list.component.css","/./src/app/video-list/video-list.component.ts","/./src/app/video.ts","/./src/app/videoservice.service.ts","/./src/environments/environment.ts","/./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card bg-dark my-5\\\">\\n        <div class=\\\"card-body\\\">\\n          <h2 class=\\\"card-title text-center text-white py-3\\\">{{ title }}</h2>\\n          <ul class=\\\"text-center list-inline py-3\\\">\\n            <li class=\\\"list-inline-item\\\"><a routerLink=\\\"/videos\\\" class=\\\"btn btn-info\\\">Videos</a></li>\\n            <li class=\\\"list-inline-item\\\"><a routerLink=\\\"/adduser\\\" class=\\\"btn btn-info\\\">Upload Video</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n      <app-comments userId=\\\"abc\\\" videoId=\\\"1\\\"></app-comments>\\n      <router-outlet></router-outlet>\\n    </div>\\n  </div>\\n  <video class=\\\"center\\\" id=\\\"myVideo\\\" height=\\\"300\\\" width=\\\"420\\\" autoplay=\\\"autoplay\\\" controls>\\n<!--    <source src=\\\"http://localhost:8080/videos/33\\\" type=\\\"video/mp4\\\">-->\\n    Your current browser is unsupported.\\n  </video>\\n</div>\\n<div>\\n  <video class=\\\"center\\\" id=\\\"player\\\" height=\\\"300\\\" width=\\\"420\\\" autoplay=\\\"autoplay\\\" controls>\\n    <source src=\\\"http://localhost:8080/videos/33\\\" type=\\\"video/mp4\\\">\\n    Your current browser is unsupported.\\n  </video>\\n</div>\\n\"","module.exports = \"<h2>Comments</h2>\\n<div>\\n  <textarea [(ngModel)]=\\\"commentText\\\" placeholder=\\\"Add a comment\\\" rows=\\\"3\\\" cols=\\\"50\\\"></textarea><br/>\\n  <button style=\\\"width: 50px; height: 30px;\\\" (click)=\\\"addComment()\\\">Add</button>\\n</div>\\n\\n\\n<section *ngFor=\\\"let comment of comments\\\">\\n  <p>\\n    <b>{{comment.userId}}</b> created the following comment at {{comment.createdDate}}\\n  </p>\\n  <p>\\n    {{comment.text}}\\n  </p>\\n\\n</section>\\n\"","module.exports = \"<div class=\\\"card my-5\\\">\\n    <div class=\\\"card-body\\\">\\n        <form (ngSubmit)=\\\"onSubmit()\\\" #userForm=\\\"ngForm\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">Name</label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"video.id\\\"\\n                       class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Video Title\\\"\\n                       required #name=\\\"ngModel\\\">\\n            </div>\\n            <div [hidden]=\\\"!name.pristine\\\" class=\\\"alert alert-danger\\\">Name is required</div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Upload File</label>\\n                <input type=\\\"text\\\" [(ngModel)]=\\\"video.videoName\\\"\\n                       class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Upload\\\"\\n                       required #name=\\\"ngModel\\\">\\n                <div [hidden]=\\\"!video.pristine\\\" class=\\\"alert alert-danger\\\">Email is required</div>\\n            </div>\\n            <button type=\\\"submit\\\" [disabled]=\\\"!userForm.form.valid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n        </form>\\n    </div>\\n</div>\"","module.exports = \"<div class=\\\"card my-5\\\">\\n    <div class=\\\"card-body\\\">\\n        <table class=\\\"table table-bordered table-striped\\\">\\n            <thead class=\\\"thead-dark\\\">\\n            <tr>\\n                <th scope=\\\"col\\\">PLAY</th>\\n                <th scope=\\\"col\\\">TITLE</th>\\n                <th scope=\\\"col\\\">DOWNLOAD</th>\\n            </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let video of videos\\\">\\n                <td> <button (click)=\\\"switchVideo(video)\\\"\\n                             class=\\\"switchVid\\\">&#9658;</button> </td>\\n                <td>{{ video.videoName }}</td>\\n                <td><a href=\\\"{{ video.videoPath }}\\\">download</a></td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {UploadVideoComponent} from \"./upload-video/upload-video.component\";\nimport {VideoListComponent} from \"./video-list/video-list.component\";\n\n\nconst routes: Routes = [\n  { path: 'videos', component: VideoListComponent },\n  { path: 'adduser', component: UploadVideoComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".center {\\n    margin-left: auto;\\n    margin-right: auto;\\n    display: block;\\n    border: #333333;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VudGVyIHtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYm9yZGVyOiAjMzMzMzMzO1xufSJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Welcome to NewTube!';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CommentsComponent } from './comments/comments.component';\nimport {FormsModule} from \"@angular/forms\";\nimport { VideoListComponent } from './video-list/video-list.component';\nimport { UploadVideoComponent } from './upload-video/upload-video.component';\nimport {VideoService} from \"./videoservice.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CommentsComponent,\n    VideoListComponent,\n    UploadVideoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [VideoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {Comment, VideoComments} from \"./comments/comment\";\nimport { HttpClient } from '@angular/common/http';\nimport {catchError, tap} from \"rxjs/operators\";\nimport {Observable, of} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommentsService {\n\n  private comments: Comment[];\n\n  constructor(private http: HttpClient) { }\n  public getComments(videoId) : Observable<VideoComments> {\n    return this.http.get<VideoComments>(\"https://video-new-tube.herokuapp.com/videos/\"+videoId+\"/comments\").pipe(\n      catchError(this.handleError<VideoComments>('getComments', null))\n    );\n  }\n\n  public addComment(videoId, userComment) {\n    console.log(\"Video ID \" + videoId);\n    console.log(userComment);\n    this.http.post(\"https://video-new-tube.herokuapp.com/videos/\"+videoId+\"/comments\", userComment).subscribe();\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      console.error(error); // log to console instead\n      return of(result as T);\n    };\n  }\n}\n\n","export class Comment {\n  public userId : string;\n  public createdDate : string;\n  public text : string;\n  constructor(){}\n}\n\nexport class VideoComments {\n  public videoId: string;\n  public comments: Comment[];\n  constructor(){}\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnRzL2NvbW1lbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, Input, OnInit} from '@angular/core';\nimport { Comment } from './comment';\nimport {CommentsService} from \"../comments.service\";\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n  public comments : Comment[] = [];\n  public commentText: string;\n  @Input() videoId: string;\n  @Input() userId: string;\n\n  constructor(private commentsService: CommentsService) { }\n\n  //page load(my component)\n  //display\n  ngOnInit() {\n    console.log(\"VideoId === \" + this.videoId); //debugging\n    console.log(\"UserId === \" + this.userId);  //debugging\n    // to call API\n    this.commentsService.getComments(this.videoId).subscribe(videoComments => {\n       this.comments = videoComments.comments;\n     });\n  }\n\n\n  addComment() {\n    let comment: Comment = new Comment();\n    comment.text = this.commentText;\n    comment.userId = this.userId;\n    this.commentsService.addComment(this.videoId, comment);\n    this.commentsService.getComments(this.videoId).subscribe(videoComments => {\n      this.comments = videoComments.comments;\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwbG9hZC12aWRlby91cGxvYWQtdmlkZW8uY29tcG9uZW50LmNzcyJ9 */\"","import { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Video } from '../video';\nimport { VideoService } from '../videoservice.service';\n\n\n@Component({\n  selector: 'app-upload-video',\n  templateUrl: './upload-video.component.html',\n  styleUrls: ['./upload-video.component.css']\n})\n\nexport class UploadVideoComponent {\n\n  video: Video;\n\n  constructor(private route: ActivatedRoute, private router: Router, private videoService: VideoService) {\n    this.video = new Video();\n  }\n\n  onSubmit() {\n    this.videoService.save(this.video).subscribe(result => this.gotoUserList());\n  }\n\n  gotoUserList() {\n    this.router.navigate(['/videos']);\n  }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZGVvLWxpc3QvdmlkZW8tbGlzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Video } from '../video';\nimport { VideoService } from '../videoservice.service';\n\n@Component({\n  selector: 'app-video-list',\n  templateUrl: './video-list.component.html',\n  styleUrls: ['./video-list.component.css']\n})\nexport class VideoListComponent implements OnInit {\n\n  videos: Video[];\n\n  constructor(private videoService: VideoService) {\n  }\n\n  ngOnInit() {\n    this.videoService.findAll().subscribe(data => {\n      this.videos = data;\n    });\n  }\n\n  switchVideo(video: Video){\n\n    console.log(video.videoPath);\n\n    let videoPlayer = document.getElementById('myVideo');\n    //let videoPlayer = document.createElement(\"video\");\n\n\n    // if (videoPlayer.hasChildNodes()){\n    //   videoPlayer.removeChild(videoPlayer.firstChild);\n    // }\n\n    let source = document.createElement('source');\n    //let type = document.createElement('type');\n\n\n    source.setAttribute('src', video.videoPath);\n    source.setAttribute('type', video.videoType);\n\n\n    videoPlayer.appendChild(source);\n    //document.body.replaceChild(ogVideoPlayer, videoPlayer);\n\n  }\n}\n","export class Video {\n    id: number;\n    videoName: string;\n    videoPath: string;\n    userId: string;\n    videoType: string;\n    videoSize: number;\n    videoBytes: string;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Video } from './video';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class VideoService {\n\n  private videoUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.videoUrl = 'https://video-new-tube.herokuapp.com/videos';\n  }\n\n  public findAll(): Observable<Video[]> {\n    console.log(this.http.get<Video[]>(this.videoUrl));\n    return this.http.get<Video[]>(this.videoUrl);\n  }\n\n  public save(video: Video) {\n    return this.http.post<Video>(this.videoUrl, video);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}